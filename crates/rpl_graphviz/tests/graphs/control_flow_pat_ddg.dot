digraph DataDependencyGraph {
compound = true;
subgraph cluster_bb0 {
    bb0IN [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1"></td></tr><tr><td align="left">?bb0[IN]</td></tr></table>>];
    bb0OUT [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1"></td></tr><tr><td align="left">?bb0[OUT]</td></tr></table>>];
    bb0stmt0 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1"></td></tr><tr><td align="left">_?0 = _</td></tr></table>>];
    bb0stmt1 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1"></td></tr><tr><td align="left">_?1 = _</td></tr></table>>];
    bb0stmt2 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1"></td></tr><tr><td align="left">switchInt(copy _?1) -&gt; [false: ?bb2, otherwise: ?bb3]</td></tr></table>>];
    bb0stmt0 -> bb0OUT [label="_?0"];
    bb0stmt1 -> bb0OUT [label="_?1"];
    bb0stmt1 -> bb0stmt2 [label="_?1"];
}
subgraph cluster_bb1 {
    bb1IN [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1"></td></tr><tr><td align="left">?bb1[IN]</td></tr></table>>];
    bb1OUT [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1"></td></tr><tr><td align="left">?bb1[OUT]</td></tr></table>>];
    bb1IN -> bb1OUT [label="*"];
}
subgraph cluster_bb2 {
    bb2IN [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1"></td></tr><tr><td align="left">?bb2[IN]</td></tr></table>>];
    bb2OUT [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1"></td></tr><tr><td align="left">?bb2[OUT]</td></tr></table>>];
    bb2IN -> bb2OUT [label="*"];
}
subgraph cluster_bb3 {
    bb3IN [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1"></td></tr><tr><td align="left">?bb3[IN]</td></tr></table>>];
    bb3OUT [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1"></td></tr><tr><td align="left">?bb3[OUT]</td></tr></table>>];
    bb3stmt0 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1"></td></tr><tr><td align="left">(*_?0) = Add(copy (*_?0), const 1_i32)</td></tr></table>>];
    bb3IN -> bb3stmt0 [label="_?0"];
    bb3stmt0 -> bb3OUT [label="_?0"];
    bb3IN -> bb3OUT [label="_?1"];
}
    bb0OUT -> bb2IN [label="0"];
    bb0OUT -> bb3IN [label="otherwise"];
    bb2OUT -> bb1IN [label=""];
    bb3OUT -> bb1IN [label=""];
}

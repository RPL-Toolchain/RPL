error: calling `set_len()` immediately after reserving a buffer creates uninitialized values
  --> tests/ui/cross-stmt-and-func-comparison-with-clippy/src/uninit_vec.rs:7:28
   |
LL |     let mut vec: Vec<u8> = Vec::with_capacity(1000);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^
...
LL |         vec.set_len(200);
   |         ^^^^^^^^^^^^^^^^
   |
   = help: initialize the buffer or wrap the content in `MaybeUninit`
   = note: `#[deny(rpl::uninit_vec)]` on by default

error: it violates the precondition of `Vec::set_len` to extend a `Vec`'s length without initializing its content in advance
  --> tests/ui/cross-stmt-and-func-comparison-with-clippy/src/uninit_vec.rs:11:9
   |
LL |     let mut vec: Vec<u8> = Vec::with_capacity(1000);
   |                            ------------------------ `Vec` created here
...
LL |         vec.set_len(200);
   |         ^^^^^^^^^^^^^^^^ `Vec::set_len` called here
   |
   = help: before calling `set_len` to extend its length, make sure all elements are initialized, using such as `spare_capacity_mut` or `as_mut_ptr`
   = note: `#[deny(rpl::set_len_uninitialized)]` on by default

error: aborting due to 2 previous errors


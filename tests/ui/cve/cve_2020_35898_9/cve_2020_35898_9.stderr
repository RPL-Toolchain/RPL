error: Obtaining a mutable reference to the value wrapped by `Rc<UnsafeCell<$T>>` may be unsound
  --> tests/ui/cve/cve_2020_35898_9/cve_2020_35898_9.rs:18:18
   |
LL |         unsafe { &mut *self.inner.as_ref().get() }
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `UnsafeCell::get_mut` called here
   |
   = help: use `std::cell::RefCell` instead
help: use `std::cell::RefCell` instead
  --> tests/ui/cve/cve_2020_35898_9/cve_2020_35898_9.rs:18:18
   |
LL |         unsafe { &mut *self.inner.as_ref().get() }
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: use `std::cell::RefCell` instead
note: there will be multiple mutable references to the value at the same time
  --> tests/ui/cve/cve_2020_35898_9/cve_2020_35898_9.rs:18:18
   |
LL |         unsafe { &mut *self.inner.as_ref().get() }
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: `#[deny(rpl::get_mut_in_rc_unsafecell)]` on by default

error: aborting due to 1 previous error


error: calling `set_len()` immediately after reserving a buffer creates uninitialized values
  --> tests/ui/cve/cve_2018_20992/cve_2018_20992.rs:6:13
   |
LL |             buffer = Vec::with_capacity(new_len);
   |             ^^^^^^
...
LL |             buffer.set_len(new_len);
   |             ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: initialize the buffer or wrap the content in `MaybeUninit`
   = note: `#[deny(rpl::uninit_vec)]` on by default

error: calling `set_len()` immediately after reserving a buffer creates uninitialized values
  --> tests/ui/cve/cve_2018_20992/cve_2018_20992.rs:6:13
   |
LL |             buffer = Vec::with_capacity(new_len);
   |             ^^^^^^
...
LL |             buffer.set_len(new_len);
   |             ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: initialize the buffer or wrap the content in `MaybeUninit`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: Use `Vec::set_len` to extend the length of a `Vec`, potentially including uninitialized elements
  --> tests/ui/cve/cve_2018_20992/cve_2018_20992.rs:3:8
   |
LL | pub fn ensure_buffer_len(mut buffer: Vec<i32>, new_len: usize) -> Vec<i32> {
   |                          ---------- `Vec` created here
LL |     if buffer.len() < new_len {
   |        ^^^^^^^^^^^^^^^^^^^^^^ `Vec::set_len` called here
   |
   = note: make sure all elements are initialized before using them
   = note: `#[deny(rpl::set_len_to_extend)]` on by default

error: aborting due to 3 previous errors


error: it is an undefined behavior to offset a pointer using an unchecked integer
  --> tests/ui/cve_2021_25905/cve_2021_25905.rs:155:18
   |
LL |         &self.buf[self.consumed..]
   |                  ^^^^^^^^^^^^^^^^^
   |                  |
   |                  offset here
   |                  pointer used here
   |
   = help: check whether it's in bound before offsetting
   = note: See the safety section in https://doc.rust-lang.org/std/primitive.pointer.html#method.offset
   = note: `-D rpl::unchecked-pointer-offset` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(rpl::unchecked_pointer_offset)]`

error: it violates the precondition of `std::slice::from_raw_parts_mut` to create a slice from uninitialized data
  --> tests/ui/cve_2021_25905/cve_2021_25905.rs:210:13
   |
LL |           let b = self.buf.len();
   |                            ----- slice created with this length
...
LL | /             std::slice::from_raw_parts_mut(
LL | |
LL | |                 self.buf.as_mut_ptr().offset(b as isize),
   | |                          ------------ slice created with this pointer
LL | |                 self.buf.capacity() - b,
LL | |             )
   | |_____________^ slice created here
   |
   = help: See https://doc.rust-lang.org/std/slice/fn.std::slice::from_raw_parts_mut.html
   = note: `#[deny(rpl::slice_from_raw_parts_uninitialized)]` on by default

error: aborting due to 2 previous errors


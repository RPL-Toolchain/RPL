note: HirId(DefId(0:3 ~ print_hir[8100]::{use#1}).0) (`use std::sync::Arc;`)
  --> tests/ui/utils/print_hir.rs:7:5
   |
LL | #[rpl::print_hir]
   | ----------------- HIR printed because of this attribute
...
LL | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

note: HirId(DefId(0:4 ~ print_hir[8100]::m).0) (`mod m {
          fn foo() { }
      }`)
  --> tests/ui/utils/print_hir.rs:10:1
   |
LL | #[rpl::print_hir]
   | ----------------- HIR printed because of this attribute
LL | mod m {
   | ^^^^^

note: HirId(DefId(0:6 ~ print_hir[8100]::Foo).0) (`trait Foo {
          const
          N:
          usize;
      }`)
  --> tests/ui/utils/print_hir.rs:16:1
   |
LL | #[rpl::print_hir]
   | ----------------- HIR printed because of this attribute
LL | trait Foo {
   | ^^^^^^^^^

note: HirId(DefId(0:7 ~ print_hir[8100]::Foo::N).0) (`const N: usize;`)
  --> tests/ui/utils/print_hir.rs:19:5
   |
LL |     #[rpl::print_hir]
   |     ----------------- HIR printed because of this attribute
LL |     const N: usize;
   |     ^^^^^^^^^^^^^^

note: HirId(DefId(0:8 ~ print_hir[8100]::{impl#0}).0) (`impl Foo for () {
          const
          N:
          usize
          =
          0usize;
      }`)
  --> tests/ui/utils/print_hir.rs:23:1
   |
LL | #[rpl::print_hir]
   | ----------------- HIR printed because of this attribute
LL | impl Foo for () {
   | ^^^^^^^^^^^^^^^

note: HirId(DefId(0:9 ~ print_hir[8100]::{impl#0}::N).0) (`const N: usize = 0usize;`)
  --> tests/ui/utils/print_hir.rs:26:5
   |
LL |     #[rpl::print_hir]
   |     ----------------- HIR printed because of this attribute
LL |     const N: usize = 0_usize;
   |     ^^^^^^^^^^^^^^

note: HirId(DefId(0:10 ~ print_hir[8100]::main).0) (`fn main() {
          let x = Arc::new(0usize);
          fn foo() { { } }
          if true { } else { }
                  std::thread::spawn(move ||
                          {
                              {
                                  ::std::io::_print(format_arguments::new_v1(&["", "\n"],
                                          &[format_argument::new_display(&x)]));
                              };
                          });
                  macro_rules! mac {
                      () => { #[rpl::print_hir] println!("test"); };
                  }
                  { ::std::io::_print(format_arguments::new_const(&["test\n"])); };
              }`)
  --> tests/ui/utils/print_hir.rs:30:1
   |
LL | #[rpl::print_hir]
   | ----------------- HIR printed because of this attribute
LL | fn main() {
   | ^^^^^^^^^

note: HirId(DefId(0:10 ~ print_hir[8100]::main).1) (`let x = Arc::new(0usize);`)
  --> tests/ui/utils/print_hir.rs:33:5
   |
LL |     #[rpl::print_hir]
   |     ----------------- HIR printed because of this attribute
LL |     let x = Arc::new(0_usize);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

note: HirId(DefId(0:11 ~ print_hir[8100]::main::foo).0) (`fn foo() { { } }`)
  --> tests/ui/utils/print_hir.rs:36:5
   |
LL |     #[rpl::print_hir]
   |     ----------------- HIR printed because of this attribute
LL |     fn foo() {
   |     ^^^^^^^^

note: HirId(DefId(0:11 ~ print_hir[8100]::main::foo).1) (`{ }`)
  --> tests/ui/utils/print_hir.rs:39:9
   |
LL |         #[rpl::print_hir]
   |         ----------------- HIR printed because of this attribute
LL |         {}
   |         ^^

note: HirId(DefId(0:10 ~ print_hir[8100]::main).11) (expr `if true {

          } else {
          }`)
  --> tests/ui/utils/print_hir.rs:43:5
   |
LL |       #[rpl::print_hir]
   |       ----------------- HIR printed because of this attribute
LL | /     if true {
LL | |
LL | |     } else {
LL | |     }
   | |_____^

note: HirId(DefId(0:10 ~ print_hir[8100]::main).19) (`std::thread::spawn(move ||
              {
                  {
                      ::std::io::_print(format_arguments::new_v1(&["", "\n"],
                              &[format_argument::new_display(&x)]));
                  };
              })`)
  --> tests/ui/utils/print_hir.rs:49:5
   |
LL |       #[rpl::print_hir]
   |       ----------------- HIR printed because of this attribute
LL | /     std::thread::spawn(move || {
LL | |
LL | |         println!("{x}");
LL | |     });
   | |______^

note: HirId(DefId(0:13 ~ print_hir[8100]::main::mac).0) (`macro_rules! mac { () => { #[rpl::print_hir] println!("test"); }; }`)
  --> tests/ui/utils/print_hir.rs:55:5
   |
LL |     #[rpl::print_hir]
   |     ----------------- HIR printed because of this attribute
LL |     macro_rules! mac {
   |     ^^^^^^^^^^^^^^^^

error: abort due to debugging
  --> tests/ui/utils/print_hir.rs:3:1
   |
LL | #[rpl::print_hir]
   | ^^^^^^^^^^^^^^^^^
...
LL | #[rpl::print_hir]
   | ^^^^^^^^^^^^^^^^^
...
LL | #[rpl::print_hir]
   | ^^^^^^^^^^^^^^^^^
...
LL |     #[rpl::print_hir]
   |     ^^^^^^^^^^^^^^^^^
...
LL | #[rpl::print_hir]
   | ^^^^^^^^^^^^^^^^^
...
LL |     #[rpl::print_hir]
   |     ^^^^^^^^^^^^^^^^^
...
LL | #[rpl::print_hir]
   | ^^^^^^^^^^^^^^^^^
...
LL |     #[rpl::print_hir]
   |     ^^^^^^^^^^^^^^^^^
...
LL |     #[rpl::print_hir]
   |     ^^^^^^^^^^^^^^^^^
...
LL |         #[rpl::print_hir]
   |         ^^^^^^^^^^^^^^^^^
...
LL |     #[rpl::print_hir]
   |     ^^^^^^^^^^^^^^^^^
...
LL |     #[rpl::print_hir]
   |     ^^^^^^^^^^^^^^^^^
...
LL |     #[rpl::print_hir]
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: `#[rpl::dump_hir]`, `#[rpl::print_hir]` and `#[rpl::dump_mir]` are only used for debugging
   = note: this error is to remind you removing these attributes
help: remove this attribute
   |
LL - #[rpl::print_hir]
LL +
   |
help: remove this attribute
   |
LL - #[rpl::print_hir]
LL +
   |
help: remove this attribute
   |
LL - #[rpl::print_hir]
LL +
   |
help: remove this attribute
   |
LL -     #[rpl::print_hir]
LL +
   |
help: remove this attribute
   |
LL - #[rpl::print_hir]
LL +
   |
help: remove this attribute
   |
LL -     #[rpl::print_hir]
LL +
   |
help: remove this attribute
   |
LL - #[rpl::print_hir]
LL +
   |
help: remove this attribute
   |
LL -     #[rpl::print_hir]
LL +
   |
help: remove this attribute
   |
LL -     #[rpl::print_hir]
LL +
   |
help: remove this attribute
   |
LL -         #[rpl::print_hir]
LL +
   |
help: remove this attribute
   |
LL -     #[rpl::print_hir]
LL +
   |
help: remove this attribute
   |
LL -     #[rpl::print_hir]
LL +
   |
help: remove this attribute
   |
LL -     #[rpl::print_hir]
LL +
   |

error: aborting due to 1 previous error


error: offset calculation on zero-sized value
  --> tests/ui/clippy/zst_offset.rs:23:11
   |
LL |         c.offset(0);
   |           ^^^^^^^^^
   |
   = note: `()` is a zero-sized type, offsetting a pointer to it will always yield the same address
   = note: `#[deny(rpl::zst_offset)]` on by default

error: offset calculation on zero-sized value
  --> tests/ui/clippy/zst_offset.rs:30:11
   |
LL |         c.sub(0);
   |           ^^^^^^
   |
   = note: `()` is a zero-sized type, offsetting a pointer to it will always yield the same address

error: offset calculation on zero-sized value
  --> tests/ui/clippy/zst_offset.rs:10:11
   |
LL |         m.offset(0);
   |           ^^^^^^^^^
   |
   = note: `()` is a zero-sized type, offsetting a pointer to it will always yield the same address

error: offset calculation on zero-sized value
  --> tests/ui/clippy/zst_offset.rs:16:11
   |
LL |         m.sub(0);
   |           ^^^^^^
   |
   = note: `()` is a zero-sized type, offsetting a pointer to it will always yield the same address

error: offset calculation on zero-sized value
  --> tests/ui/clippy/zst_offset.rs:27:11
   |
LL |         c.wrapping_add(0);
   |           ^^^^^^^^^^^^^^^
   |
   = note: `()` is a zero-sized type, offsetting a pointer to it will always yield the same address

error: offset calculation on zero-sized value
  --> tests/ui/clippy/zst_offset.rs:34:11
   |
LL |         c.wrapping_sub(0);
   |           ^^^^^^^^^^^^^^^
   |
   = note: `()` is a zero-sized type, offsetting a pointer to it will always yield the same address

error: offset calculation on zero-sized value
  --> tests/ui/clippy/zst_offset.rs:13:11
   |
LL |         m.wrapping_add(0);
   |           ^^^^^^^^^^^^^^^
   |
   = note: `()` is a zero-sized type, offsetting a pointer to it will always yield the same address

error: offset calculation on zero-sized value
  --> tests/ui/clippy/zst_offset.rs:19:11
   |
LL |         m.wrapping_sub(0);
   |           ^^^^^^^^^^^^^^^
   |
   = note: `()` is a zero-sized type, offsetting a pointer to it will always yield the same address

error: it is an undefined behavior to offset a pointer using an unchecked integer
  --> tests/ui/clippy/zst_offset.rs:23:11
   |
LL |         c.offset(0);
   |         - ^^^^^^^^^ offset here
   |         |
   |         pointer used here
   |
   = help: check whether it's in bound before offsetting
   = note: See the safety section in https://doc.rust-lang.org/std/primitive.pointer.html#method.offset
   = note: `-D rpl::unchecked-pointer-offset` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(rpl::unchecked_pointer_offset)]`

error: it is an undefined behavior to offset a pointer using an unchecked integer
  --> tests/ui/clippy/zst_offset.rs:30:11
   |
LL |         c.sub(0);
   |         - ^^^^^^ offset here
   |         |
   |         pointer used here
   |
   = help: check whether it's in bound before offsetting
   = note: See the safety section in https://doc.rust-lang.org/std/primitive.pointer.html#method.offset

error: it is an undefined behavior to offset a pointer using an unchecked integer
  --> tests/ui/clippy/zst_offset.rs:38:15
   |
LL |         sized.offset(0);
   |         ----- ^^^^^^^^^ offset here
   |         |
   |         pointer used here
   |
   = help: check whether it's in bound before offsetting
   = note: See the safety section in https://doc.rust-lang.org/std/primitive.pointer.html#method.offset

error: aborting due to 11 previous errors


pattern unsound-collection-transmute

patt {
    p_vec_vec[
        $T: type, // element type before the cast
        $U: type, // element type after the cast
    ] = #[mir] pub fn _ (..) -> _ {
        'src:
        let $p: alloc::vec::Vec<$T> = _;
        'cast:
        let $q: alloc::vec::Vec<$U> = move $p as alloc::vec::Vec<$U> (Transmute);
    } where {
        !same_abi($T, $U) || !same_size($T, $U) || !same_align($T, $U)
    }
}

diag {
    p_const_const = {
        primary(cast) = "transmutes from one collection type to another with different element type ABI, size or alignment",
        label(src)    = "casted from this",
        name          = "unsound_collection_transmute",
    }
}
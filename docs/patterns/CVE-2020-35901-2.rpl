pattern CVE-2020-35901-2

patt {
    use std::pin::Pin;

    p_pin[
        $S: type where is_not_unpin(self),
    ] = {
        struct $SizedStream {
            $field: $S,
        }

        fn $pattern(..) -> _ {
            'mut_self:
            let $self: &mut $SizedStream;
            'pin_new:
            let mut $pin_mut_struct: Pin<&mut $SizedStream> = Pin::<_> { __pointer: copy $self };
            let mut $mut_struct: &mut $SizedStream = copy ($pin_mut_struct.__pointer);
            let $mut_field: &mut $S = &mut ((*$mut_struct).$field);
            let mut $pin_mut_field: Pin<&mut $S> = Pin::<_> { __pointer: copy $mut_field };
        }
    }

    // p_pin_field[
    //     $T: type where is_not_unpin(self),
    // ] = {
    //     struct $Framed {
    //         $field: $T,
    //     }

    //     fn $pattern(..) -> _ {
    //         'mut_self:
    //         let $self: &mut $Framed;
    //         let mut $self_field: &mut $T = &mut (*$self).$field;
    //         'pin_new:
    //         let mut $pin_mut_struct: Pin<&mut $T> = Pin::<_> { __pointer: copy $self_field };
    //     }
    // }
}

// detection after monomorpization?

pattern CVE-2020-35888

patt {
    #[deduplicate]
    p_move[
        $T: type where needs_drop(self),
    ] = unsafe? fn _ (..) -> _ {
        let $size: usize = _;
        let $align: usize = _;
        'alloc:
        let $alloc_ptr: *mut u8 = alloc::alloc::__rust_alloc(move $size, move $align);
        'ptr:
        let $raw_ptr: *mut $T = _; // FIXME: related to $alloc_ptr
        let $value: $T = _;
        'drop:
        drop((*$raw_ptr));
        'assign:
        (*$raw_ptr) = move $value;
    }
}

diag {
    p_move = {
        primary(drop) = "dropped an possibly-uninitialized value",
        label(alloc)  = "memory allocated here",
        label(ptr)    = "a maybe-relative pointer created here",
        label(drop)   = "original value is dropped here",
        label(assign) = "the new value is assigned to here",
        help          = "assigning to a dereferenced pointer will cause previous value to be dropped, and try using `ptr::write` instead",
        name          = "drop_uninit_value",
    }
}

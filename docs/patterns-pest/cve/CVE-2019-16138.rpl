pattern CVE-2019-16138 

patt {
    use std::vec::Vec;

    p_set_len_uninitialized[
        $T: type,
    ] = fn _ (..) -> _ {
        'vec:
        let $vec: Vec<$T> = Vec::with_capacity(_);
        let $vec_ref: &mut Vec<$T> = &mut $vec;
        'set_len:
        _ = Vec::set_len(move $vec_ref, _);
    }
}

diag {
    p_set_len_uninitialized = {
        primary(set_len) = "it violates the precondition of `Vec::set_len` to extend a `Vec`'s length without initializing its content in advance",
        label(set_len)   = "`Vec::set_len` called here",
        label(vec)       = "`Vec` created here",
        help             = "before calling `set_len` to extend its length, make sure all elements are initialized, using such as `spare_capacity_mut` or `as_mut_ptr`",
        level            = "deny",
        name             = "set_len_uninitialized",
    }
}
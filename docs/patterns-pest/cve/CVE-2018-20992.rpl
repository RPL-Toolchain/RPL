pattern CVE-2018-20992

patt {
    use alloc::vec::Vec;

    #[deduplicate]
    p_vec_set_len_to_extend[
        $T: type
    ] = fn _ (..) -> _ {
        type VecT = alloc::vec::Vec::<$T>;

        'vec:
        let $vec: VecT = _;
        let $new_len: usize = _;
        let $vec_ref: &VecT = &$vec;
        let $old_len: usize = Vec::len(move $vec_ref);
        let $cmp: bool = Lt(move $old_len, copy $new_len);
        let $vec_mut_ref: &mut VecT;
        let $set_len_res: ();
        'set_len: 
        switchInt(move $cmp) {
            false => {}
            _ => {
                // FIXME: move 'set_len here
                $vec_mut_ref = &mut $vec;
                $set_len_res = Vec::set_len(move $vec_mut_ref, copy $new_len);
            }
        }
    }
}

diag {
    p_vec_set_len_to_extend = {
        primary(set_len) = "Use `Vec::set_len` to extend the length of a `Vec`, potentially including uninitialized elements",
        label(set_len)   = "`Vec::set_len` called here",
        label(vec)       = "`Vec` created here",
        note             = "make sure all elements are initialized before using them",
        level            = "deny",
        name             = "set_len_to_extend",
    }
}

pattern CVE-2020-35881

patt {
    #[diag = "fat_pointer"]
    const_const[
        $T: type,
    ] = {
        unsafe? fn _(..) -> _ {
            let $ptr: *const $T = _;
            // _4 = &_1;
            let $ref_to_ptr: &*const $T = &$ptr;
            // _3 = &raw const (*_4);
            let $ptr_to_ptr_t: *const *const $T = &raw const (*$ref_to_ptr);
            // _2 = move _3 as *const *const () (Transmute);
            'ptr_transmute:
            let $ptr_to_ptr: *const *const() = move $ptr_to_ptr_t as *const *const () (Transmute);
            // _0 = copy (*_2);
            'data_ptr_get:
            let $data_ptr: *const () = _;
        }
    }
    #[diag = "fat_pointer"]
    mut_mut[
        $T: type,
    ] = {
        unsafe? fn _(..) -> _ {
            let $ptr: *mut $T = _;
            // _4 = &mut _1;
            let $ref_to_ptr: &mut *mut $T = &mut $ptr;
            // _3 = &raw mut (*_4);
            let $ptr_to_ptr_t: *mut *mut $T = &raw mut (*$ref_to_ptr);
            // _2 = move _3 as *mut *mut () (Transmute);
            'ptr_transmute:
            let $ptr_to_ptr: *mut *mut() = move $ptr_to_ptr_t as *mut *mut () (Transmute);
            // _0 = copy (*_2);
            'data_ptr_get:
            let $data_ptr: *mut () = _;
        }
    }
    #[diag = "fat_pointer"]
    mut_const[
        $T: type,
    ] = {
        unsafe? fn _(..) -> _ {
            let $ptr: *const $T = _;
            let $ref_to_ptr: &mut *const $T = &mut $ptr;
            let $ptr_to_ptr_t: *mut *const $T = &raw mut (*$ref_to_ptr);
            'ptr_transmute:
            let $ptr_to_ptr: *mut *mut () = move $ptr_to_ptr_t as *mut *mut () (PtrToPtr);
            // _0 = copy (*_2);
            'data_ptr_get:
            let $data_ptr: *mut () = _;
        }
    }
}

diag {
    fat_pointer = {
        primary(ptr_transmute) = "wrong assumption of fat pointer layout",
        label(ptr_transmute)   = "ptr transmute here",
        label(data_ptr_get)    = "try to get data ptr from first 8 bytes here",
        help                   = "the Rust Compiler does not expose the layout of fat pointers",
        name                   = "wrong_assumption_of_fat_pointer_layout",
        level                  = "deny",
    }
}

pattern CVE-2020-25016

patt {
    p_unsound_trait[
        T: ty
    ] = pub trait $trait_name {
        #[mir]
        fn _ (..) -> _ {
            let $from_slice: &[$T] = _;
            let $from_slice_mut: &mut [$T] = _;

            let $from_raw: *const [$T] = &raw const *$from_slice;
            let $from_raw_mut: *mut [$T] = &raw mut *$from_slice_mut;

            let $to_ptr: *const u8 = copy $from_raw as *const u8 (PtrToPtr);
            let $to_ptr_mut: *mut u8 = copy $from_raw_mut as *mut u8 (PtrToPtr);

            let $from_len: usize = Len(*$from_slice);
            let $ty_size: usize = SizeOf($T);
            let $to_len: usize = Mul(move $from_len, move $ty_size);

            let $to_raw: *const [u8] = *const [u8] from (copy $to_ptr, copy $to_len);
            let $to_raw_mut: *mut [u8] = *mut [u8] from (copy $to_ptr_mut, copy $to_len);

            let $to_slice: &[u8] = &*$to_raw;
            let $to_slice_mut: &mut [u8] = &mut *$to_raw_mut;
        } #~[safety = safe]
    } #~[safety = safe]
}





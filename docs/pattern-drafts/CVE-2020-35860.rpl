pattern CVE-2020-35860

mvar {
    CBox: ident
    T: ty
    ptr: ident
    from_ptr: ident
}

util {
    p_cbox = ```rust
        pub struct $CBox {
            $ptr: *mut $T,
        }
    ```

    p_cbox_new = ```rust
        impl $CBox {
            pub fn new($from_ptr: *mut $(_:ty)) -> Self {
                #without! {
                    $from_ptr.is_null()
                }
                $CBox::#new!{ $from_ptr }
            }
        }
    ```

    p_cbox_deref = ```rust
        impl Deref for $CBox {
            fn deref(&self) -> (_:ty) {
                #without! {
                    self.$ptr.is_null()
                }
                let (_:ident) = CStr::from_ptr(self.$ptr);
            }
        }
    ```
}

patt {
    p = 
        & p_cbox
        & p_cbox_new
        & p_cbox_deref
}

use {
    std::ffi::CStr,
    std::ops::Deref,
}
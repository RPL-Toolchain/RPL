pattern CVE-2020-35892-3

util {
    pat_slab_struct = 
        struct $S<$T> {
            $ptr: *mut $T,
            $cap: usize,
            $len: usize,
        }

    pat_index_impl = 
        impl<$T> Index<usize> for $S<$T> {
            type Output = $T;
            fn index(&self, index: usize) -> &$T {
                #without!(if index < self.$len) {
                    #xor! {
                        unsafe { &*self.$ptr.add(index) }
                        unsafe { &*self.$ptr.offset($index as isize) }
                    }
                }
            }
        }

    pat_off_by_one_error =
        impl<$T> $S<$T> {
            pub fn $func(&self) -> _ {
                #xor! {
                    self.$ptr.add(self.$len)
                    self.$ptr.offset(self.$len as isize)
                }
            }
        }
}

patt {
    p = 
        & pat_slab_struct
        & (
            | pat_index_impl 
            | pat_off_by_one_error
        )
}


